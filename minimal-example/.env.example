# AI中台增强版环境配置文件
# 复制此文件为 .env 并根据实际情况修改配置

# =========================
# Django 后端配置
# =========================
DEBUG=1
SECRET_KEY=your-secret-key-here
ALLOWED_HOSTS=localhost,127.0.0.1,backend

# =========================
# 数据库配置
# =========================
DATABASE_URL=postgresql://ai_user:ai_password@postgres:5432/ai_platform
POSTGRES_DB=ai_platform
POSTGRES_USER=ai_user
POSTGRES_PASSWORD=ai_password

# =========================
# Redis 配置
# =========================
REDIS_URL=redis://redis:6379/0

# =========================
# 对象存储配置 (MinIO)
# =========================
MINIO_ENDPOINT=minio:9000
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin
MINIO_BUCKET_NAME=ai-platform-storage

# =========================
# JWT 配置
# =========================
JWT_SECRET_KEY=your-jwt-secret-key
JWT_EXPIRATION_HOURS=24

# =========================
# 邮件配置 (可选)
# =========================
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=1
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-app-password

# =========================
# 前端配置
# =========================
# 注意：如需从其他电脑访问，请将localhost改为服务器实际IP地址
NEXT_PUBLIC_API_URL=http://localhost:8000/api
# 示例：NEXT_PUBLIC_API_URL=http://192.168.110.88:8000/api
NEXT_PUBLIC_APP_NAME=AI Platform Enhanced

# =========================
# 文件上传配置
# =========================
MAX_UPLOAD_SIZE=100MB
ALLOWED_FILE_TYPES=.csv,.json,.txt,.py,.ipynb,.pkl,.h5,.onnx

# =========================
# Triton Inference Server 配置
# =========================
TRITON_SERVER_URL=http://triton-server:8000
TRITON_GRPC_URL=triton-server:8001
TRITON_METRICS_URL=http://triton-server:8002
TRITON_MODEL_REPOSITORY=/models
NEXT_PUBLIC_TRITON_URL=http://localhost:8100

# =========================
# Ollama & OpenWebUI 配置
# =========================
OLLAMA_BASE_URL=http://ollama:11434
WEBUI_SECRET_KEY=your-webui-secret-key
WEBUI_AUTH=true
DEFAULT_LOCALE=zh-CN
ENABLE_COMMUNITY_SHARING=false
NEXT_PUBLIC_OPENWEBUI_URL=http://localhost:3001

# =========================
# 监控配置 (Prometheus & Grafana)
# =========================
PROMETHEUS_URL=http://prometheus:9090
GRAFANA_ADMIN_PASSWORD=admin123
ENABLE_METRICS=true
NEXT_PUBLIC_PROMETHEUS_URL=http://localhost:9090
NEXT_PUBLIC_GRAFANA_URL=http://localhost:3002

# =========================
# GPU 相关配置
# =========================
CUDA_VISIBLE_DEVICES=all
NVIDIA_VISIBLE_DEVICES=all
NVIDIA_DRIVER_CAPABILITIES=compute,utility

# =========================
# Docker Compose 配置
# =========================
COMPOSE_PROFILES=default
# 可选的 profiles (用逗号分隔):
# - gpu: 启用 GPU 相关服务 (Triton with GPU)
# - ollama: 启用 Ollama 和 OpenWebUI
# - monitoring: 启用监控服务 (Prometheus, Grafana)
# 示例: COMPOSE_PROFILES=default,ollama,monitoring

# =========================
# 安全配置
# =========================
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001
SECURE_SSL_REDIRECT=false
SECURE_BROWSER_XSS_FILTER=true
SECURE_CONTENT_TYPE_NOSNIFF=true

# =========================
# 日志配置
# =========================
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_MAX_SIZE=10MB
LOG_BACKUP_COUNT=5

# =========================
# 缓存配置
# =========================
CACHE_TTL=3600
CACHE_MAX_ENTRIES=10000

# =========================
# 性能配置
# =========================
MAX_WORKERS=4
REQUEST_TIMEOUT=30
CONNECTION_POOL_SIZE=20

# =========================
# 开发调试配置
# =========================
ENABLE_DEBUG_TOOLBAR=true
SHOW_SQL_QUERIES=false
ENABLE_API_DOCS=true
