version: '3.8'

services:
  mongodb:
    image: mongo:6.0
    container_name: ai-platform-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: ai_platform
    ports:
      - "27017:27017"
    volumes:
      - ../data/mongodb:/data/db
    networks:
      - ai-platform

  prometheus:
    image: prom/prometheus:latest
    container_name: ai-platform-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ../monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ../data/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    networks:
      - ai-platform

  grafana:
    image: grafana/grafana:latest
    container_name: ai-platform-grafana
    restart: unless-stopped
    ports:
      - "3002:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ../data/grafana:/var/lib/grafana
    networks:
      - ai-platform

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: ai-platform-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - DATABASE_URL=mongodb://admin:admin123@mongodb:27017/ai_platform
    volumes:
      - ./backend:/app
      - ./logs/backend:/app/logs
    networks:
      - ai-platform
    depends_on:
      - mongodb

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-platform-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NODE_ENV=production
    networks:
      - ai-platform
    depends_on:
      - backend

networks:
  ai-platform:
    driver: bridge
